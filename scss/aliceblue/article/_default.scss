@use "sass:color";
@use "sass:math";
@use "sass:list";

@function fade-by($color, $rate: 0.9) {
  $alpha: color.alpha($color);
  $delta: $alpha * $rate - $alpha;
  @return color.adjust($color, $alpha: $delta);
}

@function list-extend($list, $prepender: "", $appender: "", $expections: ()) {
  $res: ();

  @for $i from 1 through list.length($list) {
    $ele: list.nth($list, $i);
    $res: list.join($res, $prepender + $ele + $appender, $separator: comma);
  }

  @return $res;
}

@mixin --aliceblue-article-default-text-color-style(
  $color,
  $shadow: (1px 1px 2px),
  $alpha: 0.3
) {
  color: $color;
  text-shadow: #{$shadow} fade-by($color, $alpha);
}

@mixin article-default(
  $article: "article",
  $color: black,
  $link-color: deepskyblue,
  $theme-color: #ffff,
  $transition-duration: 0.4s,
  $image-width: 800px,
  $minimal-font-size: 12px,
  $font-family: inherit,
  $code-font: monospace,
  $max-width: 900px
) {
  $text-containers: (p, "ul > li", "ol > li", h1, h2, h3, h4, h5, h6);
  #{$article},
  #{$article} > blockquote,
  #{$article} blockquote > blockquote {
    font-family: $font-family;
    font-size: max(min(1em, 4vw), $minimal-font-size);
    width: min($max-width, calc(100% - 6em));
    box-sizing: content-box;
    padding: 2em calc(50% - min($max-width, calc(100% - 6em)) / 2);

    > * {
      transition: $transition-duration color, $transition-duration text-shadow;
      color: fade-by($color);
      width: 100%;
      box-sizing: border-box;

      > a {
        transition: $transition-duration;
        text-decoration: none;
        font-weight: bold;
        color: fade-by($link-color);
      }

      > a:visited {
        color: fade-by(
          color.adjust($link-color, $hue: -90deg, $blackness: 20%)
        );
      }
    }

    > *:hover {
      color: $color;
      text-shadow: 1px 1px 2px fade-by($color, 0.3);
      > a:link {
        // color: $link-color;
        @include --aliceblue-article-default-text-color-style($link-color);
      }

      > a:visited {
        // color: color.adjust($link-color, $hue: -90deg, $blackness: 20%);
        @include --aliceblue-article-default-text-color-style(
          color.adjust($link-color, $hue: -90deg, $blackness: 20%)
        );
      }

      > a:hover {
        // color: color.adjust($link-color, $hue: 15deg);
        @include --aliceblue-article-default-text-color-style(
          color.adjust($link-color, $hue: 15deg)
        );
        cursor: pointer;
      }

      > a:active {
        // color: color.adjust($link-color, $hue: 25deg, $blackness: -20%);
        @include --aliceblue-article-default-text-color-style(
          color.adjust($link-color, $hue: 25deg, $blackness: -20%)
        );
      }
    }

    #{list-extend($text-containers, "> ")} {
      > del {
        text-decoration: line-through solid 0.1em;
      }
      > u {
        text-decoration: underline dashed 0.1em;
      }
      > b {
        font-style: bold;
      }
      > em, > i /* as italic */ {
        font-style: italic;
      }
      font-size: 1em;
      //margin: 1em 0 1em 0;
      line-height: 1.4em;
      letter-spacing: 0.02em;
      word-spacing: 0.04em;
    }

    #{list-extend($text-containers, "> ", " > img")} {
      transition: $transition-duration;
      margin: 0 1em;
      max-width: 50%;
      min-width: 20%;
      opacity: 0.9;
    }

    #{list-extend($text-containers, "> ", " > img:nth-child(odd)")} {
      float: left;
      clear: both;
    }

    #{list-extend($text-containers, "> ", " > img:nth-child(even)")} {
      float: right;
      clear: both;
    }

    #{list-extend($text-containers, "> ", ":hover > img")} {
      opacity: 1;
    }

    $header-font-size: 2.7;

    @for $i from 1 through 6 {
      > h#{$i} {
        font-size: $header-font-size * 1em;
        font-weight: bold;
        margin: math.div(0.7em, $header-font-size) 0;
        text-align: center;
      }
      $header-font-size: $header-font-size * 0.9;
    }

    $width: math.div(50%, 3);
    @for $i from 1 through 2 {
      > h#{$i}::after {
        $margin: math.div(100% - $width, 2);
        transition: $transition-duration;
        content: "";
        display: block;
        width: $width;
        height: 0.07em;
        box-sizing: border-box;
        margin: 0 $margin 0 $margin;
        border-bottom: 0.07em fade-by($color);
        border-bottom-style: dotted;
      }
      > h#{$i}:hover::after {
        $margin: math.div(100% - $width * 3, 2);
        width: $width * 3;
        margin: 0 $margin 0 $margin;
        border-bottom: 0.03em $color;
        border-bottom-style: dotted;
      }
      $width: $width * 0.9;
    }

    > p {
      margin: 1em 0;
    }

    > p::first-letter {
      display: inline-block;
      font-size: 1.4em;
      font-weight: bold;
      font-style: italic;
      text-transform: capitalize;
    }

    > img,
    > table,
    > pre {
      $width: "min(100%, " + $image-width + ")";
      $margin: "calc((100% - " + $width + ") * 0.5)";
      // box-sizing: border-box;
      width: #{$width};
      margin: 3em #{$margin};
    }

    > pre {
      box-sizing: border-box;
      font-family: $code-font;
      font-size: 0.9em;
      padding: 2em 0em;
      border-radius: 2em;
      overflow-x: scroll;
      > code {
        width: 100%;
      }
    }

    > img {
      // margin: 3em 0;
      display: inline;
      transition: $transition-duration;
      opacity: 0.8;
      border-radius: 2em;
    }

    > img:hover {
      opacity: 1;
      border-radius: 0;
    }

    > table {
      display: table;
      border-collapse: collapse;
      border: 3px solid $color;

      > tbody,
      > tfoot {
        border-top: 2px solid $color;
      }

      > caption {
        font-size: 1.4em;
        font-weight: bold;
        padding: 1em;
      }

      th {
        text-align: center;
      }

      th,
      td {
        padding: 1em;
        border: 1px solid $color;
        transition: $transition-duration;
      }

      th:nth-child(odd),
      td:nth-child(odd) {
        background-color: color.adjust(
          $theme-color,
          $blackness: 5%,
          $alpha: -0.5
        );
      }

      th:nth-child(even),
      td:nth-child(even) {
        background-color: color.adjust(
          $theme-color,
          $blackness: -5%,
          $alpha: -0.5
        );
      }
    }

    > table:hover {
      th:nth-child(odd),
      td:nth-child(odd) {
        background-color: color.adjust($theme-color, $blackness: -5%);
      }

      th:nth-child(even),
      td:nth-child(even) {
        background-color: color.adjust($theme-color, $blackness: 5%);
      }
    }

    > ol,
    > ul,
    ol > li > ol,
    ol > li > ul,
    ul > li > ol,
    ul > li > ul,
    ol > ol,
    ol > ul,
    ul > ol,
    ul > ul {
      // color: fade-by($color);
      transition: $transition-duration;
      font-size: 1em;
      margin-left: 1em;
      transition: none;
      > li {
        color: fade-by($color);
        transition: $transition-duration;
      }
    }

    > ul,
    > ol {
      margin-top: 1em;
      margin-bottom: 1em;
      margin-left: 2em;
    }

    > ol:hover,
    > ul:hover,
    ol > li > ol:hover,
    ol > li > ul:hover,
    ul > li > ol:hover,
    ul > li > ul:hover,
    ol > ol:hover,
    ol > ul:hover,
    ul > ol:hover,
    ul > ul:hover {
      > li {
        color: fade-by($color);
        text-shadow: none;
      }
      > li:hover {
        color: $color;
        text-shadow: 1px 1px 2px fade-by($color, 0.3);
      }
    }

    > blockquote {
      margin: 3em 0;
      transition: opacity $transition-duration;
      font-size: max(90%, $minimal-font-size);
      opacity: 0.9;
      background-color: fade-by(
        color.adjust($theme-color, $blackness: 20%),
        0.2
      );
      display: block;
      box-sizing: border-box;
      width: 100%;
      border-radius: 2em;
      padding: 0.5em 2em;
      border-left: 0.5em solid
        fade-by(color.adjust($theme-color, $blackness: 80%), 0.2);
    }

    > blockquote:hover {
      opacity: 1;
      color: fade-by($color);
      text-shadow: none;
    }
  }
}
